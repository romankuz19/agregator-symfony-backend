version: '3.8'

networks:
  skeletonbr:
    driver: bridge
  elastic:
    external: true

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    networks:
      - skeletonbr
      - elastic
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  php:
    container_name: 'php-skeleton'
    networks:
      - skeletonbr
      - elastic
    build:
      context: ./docker/php
    volumes:
      - '.:/var/www/html'
      - './docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro'
    environment:
      COMPOSER_MEMORY_LIMIT: 2G
    working_dir: '/var/www/html'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - "9000:9000"  # Expose PHP-FPM port

  nginx:
    container_name: 'nginx-skeleton'
    image: nginx:1.23.2-alpine
    networks:
      - skeletonbr
    depends_on:
      - php
    ports:
      - 80:80
    volumes:
      - '.:/var/www/html'
      - './docker/nginx/conf.d/default.nginx:/etc/nginx/conf.d/default.conf'

  postgres:
    container_name: 'pg-skeleton'
    image: postgres:15.1-alpine
    networks:
      - skeletonbr
    ports:
      - '5432:5432'
    restart: always
    environment:
      POSTGRES_DB: 'skeletonbr'
      POSTGRES_USER: 'devuser'
      POSTGRES_PASSWORD: '97y2amDpm'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: 'redis-skeleton'
    image: redis:7.0-alpine
    networks:
      - skeletonbr
    ports:
      - '6379:6379'
    volumes:
      - ./docker/redis/data:/data
    command: redis-server --save 60 1 --loglevel warning

volumes:
  postgres_data:
  rabbitmq_data: